---
const { headings } = Astro.props;

const toc = buildToc(headings);

interface Heading {
  depth: number;
  text: string;
  slug: string;
}

interface tocItem extends Heading {
  subheadings: tocItem[];
}
function buildToc(headings: Heading[]) {
  const toc: tocItem[] = [];
  const parentHeadings = new Map();

  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);

    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });

  return toc;
}
---

<h2 class="text-2xl font-bold mb-1 mt-4">Table of Contents</h2>
<nav id="toc" class="mb-6">
  <ul>
    {
      toc.map((heading) => (
        <li>
          <a
            class="text-lg py-1 inline-block text-primary-200 font-medium"
            href={`#${heading.slug}`}
          >
            {heading.text}
          </a>
          {heading.subheadings.length > 0 && (
            <ul class="ml-4">
              {heading.subheadings.map((subheading) => (
                <li>
                  <a
                    class="text-base py-1 inline-block text-primary-200 font-medium"
                    href={`#${subheading.slug}`}
                  >
                    {subheading.text}
                  </a>
                </li>
              ))}
            </ul>
          )}
        </li>
      ))
    }
  </ul>
</nav>

<style>
  #toc a {
    @apply inline-flex items-center;
    &::before {
      content: "";
      @apply transition-transform origin-top inline-block w-1 h-6 scale-y-0 bg-secondary-400 mr-2;
    }
  }

  #toc a.active {
    @apply text-secondary-400 border-secondary-400;

    &::before {
      @apply scale-y-100;
    }
  }
</style>

<script>
  addIntersectionObserverForTOC();

  function addIntersectionObserverForTOC() {
    const observer = new IntersectionObserver((headings) => {
      headings.forEach((heading) => {
        const id = heading.target.getAttribute("id");

        const link = document.querySelector(`#toc a[href="#${id}"]`);
        if (!link) return;

        const addRemove = heading.intersectionRatio > 0 ? "add" : "remove";

        link.classList[addRemove]("active");
      });
    });

    document
      .querySelectorAll("#toc-article h2, #toc-article h3")
      .forEach((heading) => {
        observer.observe(heading);
      });
  }
</script>
