---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Prose from "~/components/Prose.astro";
import TableOfContents from "~/components/TableOfContents.astro";
import PageLayout from "~/layouts/PageLayout.astro";

export const getStaticPaths = (async () => {
  const blogPosts = await getCollection("blog", ({ data }) => {
    return data.isDraft !== true;
  });

  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { Content, headings } = await post.render();

function formatDate(date: Date) {
  return date.toLocaleDateString("en-us", {
    day: "numeric",
    month: "long",
    year: "numeric",
  });
}

function showLastUpdateDate(publishDate: Date, updateDate?: Date) {
  return updateDate
    ? `Last updated on ${formatDate(updateDate)}`
    : `Published on ${formatDate(publishDate)}`;
}
---

<PageLayout>
  <h1 class="text-4xl font-bold max-w-prose mx-auto text-center mb-8">
    {post.data.title}
  </h1>
  <div>
    <p class="text-lg text-center my-3">
      {showLastUpdateDate(post.data.publishDate, post.data.updateDate)}
    </p>

    <div class="my-4 text-center mx-auto">
      {
        post.data.tags.map((tag) => (
          <a
            href="#"
            class="bg-primary-300 text-copy-950 px-3 py-1 rounded mx-3"
          >
            {tag}
          </a>
        ))
      }
    </div>
  </div>

  <div class="max-w-prose mx-auto">
    <p class="text-lg bg-background-600 p-3 rounded-lg my-3">
      {post.data.excerpt}
    </p>

    <TableOfContents headings={headings} />

    <Prose>
      <Content />
    </Prose>
  </div>
</PageLayout>
