---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Prose from "~/components/Prose.astro";
import TableOfContents from "~/components/TableOfContents.astro";
import PageLayout from "~/layouts/PageLayout.astro";

export const getStaticPaths = (async () => {
  const blogPosts = await getCollection("blog", ({ data }) => {
    return data.isDraft !== true;
  });

  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { Content, headings } = await post.render();

const relatedPosts = await getRelatedPosts(post.data.tags);

async function getRelatedPosts(tags: string[]) {
  const blogPosts = await getCollection("blog", ({ data }) => {
    return data.isDraft !== true;
  });
  const relatedPosts = blogPosts
    .filter((p) => p.slug !== post.slug)
    .filter((p) => p.data.tags.some((t) => tags.includes(t)))
    .sort(
      (a, b) =>
        new Date(b.data.publishDate).valueOf() -
        new Date(a.data.publishDate).valueOf()
    )
    .slice(0, 3);
  return relatedPosts ?? [];
}

function formatDate(date: Date) {
  return date.toLocaleDateString("en-us", {
    day: "numeric",
    month: "long",
    year: "numeric",
  });
}

function showLastUpdateDate(publishDate: Date, updateDate?: Date) {
  return updateDate
    ? `${formatDate(updateDate)}`
    : `${formatDate(publishDate)}`;
}
---

<PageLayout
  seo={{
    title: post.data.seoTitle ?? post.data.title,
    description: post.data.seoDescription ?? post.data.excerpt,
    canonical: "https://nirjan.dev/blog/" + post.slug,
    openGraph: {
      basic: {
        title: post.data.seoTitle ?? post.data.title,
        type: "website",
        image: "https://nirjan.dev/images/og-image.jpeg",
        url: "https://nirjan.dev",
      },
    },
  }}
>
  <article id="toc-article">
    <h1
      class="text-3xl mt-4 md:text-5xl md:mt-8 leading-snug font-extrabold max-w-prose mx-auto text-center mb-8"
    >
      {post.data.title}
    </h1>
    <div class="mb-12">
      <p class="text-lg text-center my-3">
        Last updated on: <span
          class="underline decoration-secondary-400 underline-offset-4"
          >{
            showLastUpdateDate(post.data.publishDate, post.data.updateDate)
          }</span
        >
      </p>
      <div
        class="my-4 text-center mx-auto flex max-w-full overflow-auto items-center justify-center"
      >
        {
          post.data.tags.map((tag) => (
            <a
              href="#"
              class="capitalize bg-primary-300 text-copy-950 px-1 md:px-3 md:py-1 rounded mx-3"
            >
              {tag}
            </a>
          ))
        }
      </div>
    </div>
    <div class="lg:float-left max-w-96 lg:sticky top-24">
      <TableOfContents headings={headings} />
    </div>
    <div class="lg:ml-96 lg:pl-6 max-w-prose mx-auto">
      <p class="md:text-lg bg-background-600 p-3 rounded-lg my-6">
        {post.data.excerpt}
      </p>
      <Prose>
        <Content />
      </Prose>

      {
        relatedPosts.length > 0 && (
          <div class="my-12 mb-6" id="related-posts">
            <h2 class="text-2xl font-bold mb-2">Related Posts</h2>
            <ol class="list-decimal pl-4">
              {relatedPosts.map((relatedPost) => (
                <li class="mb-2">
                  <a href={`/blog/${relatedPost.slug}`}>
                    <h3 class="text-lg font-bold pl-2 inline">
                      {relatedPost.data.title}
                    </h3>
                  </a>
                </li>
              ))}
            </ol>
          </div>
        )
      }

      <a
        href="/blog"
        class="inline-block py-4 font-semibold bg-primary-700 px-6 rounded-md text-copy-300"
        >View all posts</a
      >

      <div class="my-12" id="comment-section">
        <script
          is:inline
          src="https://utteranc.es/client.js"
          repo="nirjan-dev/site-comments"
          issue-term="pathname"
          theme="github-dark"
          crossorigin="anonymous"
          async></script>
      </div>
    </div>
  </article>
</PageLayout>
