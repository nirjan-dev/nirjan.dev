---
import PageLayout from "~/layouts/PageLayout.astro";
import { getCollection } from "astro:content";
import { personSchema } from "~/utils/personSchema";
import type { GetStaticPaths } from "astro";

const tag = Astro.params.tag;

if (!tag) {
  return Astro.redirect("/blog");
}

let blogPosts = await getCollection("blog", ({ data }) => {
  return data.isDraft !== true && data.tags.includes(tag as any);
});

blogPosts = blogPosts.sort((a, b) => {
  return (
    new Date(b.data.publishDate).valueOf() -
    new Date(a.data.publishDate).valueOf()
  );
});

export const getStaticPaths = (async () => {
  const blogPosts = await getCollection("blog", ({ data }) => {
    return data.isDraft !== true;
  });

  const allTags = blogPosts.map((post) => post.data.tags).flat();
  const uniqueTags = [...new Set(allTags)];

  return uniqueTags.map((tag) => ({
    params: { tag },
  }));
}) satisfies GetStaticPaths;
---

<PageLayout
  seo={{
    title: "Nirjan's blog focusing on coding and tech",
    description:
      "I make websites and apps that are fast, user friendly, accessible and secure. I work with Typescript, HTML & CSS, Vue, Svelte, Node.js and Golang.",
    canonical: "https://nirjan.dev/blog",
    openGraph: {
      basic: {
        title: "Nirjan Khadka's Blog",
        type: "website",
        image: "https://nirjan.dev/images/site-og.png",
        url: "https://nirjan.dev/blog",
      },
    },
  }}
  schemaGraphItems={[
    {
      "@type": "Blog",
      url: "https://nirjan.dev/blog",
      name: "Nirjan's Tech Blog",
      description:
        "I make websites and apps that are fast, user friendly, accessible and secure. I work with Typescript, HTML & CSS, Vue, Svelte, Node.js and Golang.",
      inLanguage: "en-US",
      dateModified: new Date(
        blogPosts[0].data.updateDate ?? blogPosts[0].data.publishDate
      ).toISOString(),
      author: personSchema,
    },
  ]}
>
  <h1 class="text-3xl md:text-4xl font-bold mb-6 text-center">
    All posts tagged with "{tag}"
  </h1>

  <div class="max-w-prose mx-auto">
    <ul class="grid gap-4 mb-6">
      {
        blogPosts.map((post) => (
          <li>
            <div class="p-2 grid gap-2 rounded-lg h-full">
              <h3 class="text-xl text-blue-600 font-bold">
                <a href={`/blog/${post.slug}`}>{post.data.title}</a>
              </h3>
              <p>{new Date(post.data.publishDate).toLocaleDateString()}</p>
            </div>
          </li>
        ))
      }
    </ul>
    <a
      href="/blog"
      class="inline-block py-4 font-semibold border-4 focus:text-copy-50 focus:bg-primary-600 hover:text-copy-50 hover:bg-primary-600 transition-colors border-primary-700 px-6 rounded-md text-copy-300"
      >View all posts</a
    >
  </div>
</PageLayout>
